{"title":"PCMPGTB/PCMPGTW/PCMPGTD â€” Compare Packed Signed Integers for Greater Than","fields":[{"name":"Instruction Modes","value":"`PCMPGTB mm, mm/m64`\n`PCMPGTB xmm1, xmm2/m128`\n`PCMPGTW mm, mm/m64`\n`PCMPGTW xmm1, xmm2/m128`\n`PCMPGTD mm, mm/m64`\n`PCMPGTD xmm1, xmm2/m128`\n`VPCMPGTB xmm1, xmm2, xmm3/m128`\n`VPCMPGTW xmm1, xmm2, xmm3/m128`\n`VPCMPGTD xmm1, xmm2, xmm3/m128`\n`VPCMPGTB ymm1, ymm2, ymm3/m256`\n`VPCMPGTW ymm1, ymm2, ymm3/m256`\n`VPCMPGTD ymm1, ymm2, ymm3/m256`\n`VPCMPGTD k1 {k2}, xmm2, xmm3/m128/m32bcst`\n`VPCMPGTD k1 {k2}, ymm2, ymm3/m256/m32bcst`\n`VPCMPGTD k1 {k2}, zmm2, zmm3/m512/m32bcst`\n`VPCMPGTB k1 {k2}, xmm2, xmm3/m128`\n`VPCMPGTB k1 {k2}, ymm2, ymm3/m256`"},{"name":"Description","value":"Performs an SIMD signed compare for the greater value of the packed byte, word, or doubleword integers in the destination operand (first operand) and the source operand (second operand). If a data element in the destination operand is greater than the corresponding date element in the source operand, the corresponding data element in the destination operand is set to all 1s; otherwise, it is set to all 0s."},{"name":"\u200b","value":"The PCMPGTB instruction compares the corresponding signed byte integers in the destination and source operands; the PCMPGTW instruction compares the corresponding signed word integers in the destination and source operands; and the PCMPGTD instruction compares the corresponding signed doubleword integers in the destination and source operands."},{"name":"\u200b","value":"In 64-bit mode and not encoded with VEX/EVEX, using a REX prefix in the form of REX.R permits this instruction to access additional registers (XMM8-XMM15)."},{"name":"\u200b","value":"Legacy SSE instructions: The source operand can be an MMX technology register or a 64-bit memory location. The destination operand can be an MMX technology register."},{"name":"\u200b","value":"128-bit Legacy SSE version: The second source operand can be an XMM register or a 128-bit memory location. The first source operand and destination operand are XMM registers. Bits (MAXVL-1:128) of the corresponding YMM destination register remain unchanged."},{"name":"\u200b","value":"VEX.128 encoded version: The second source operand can be an XMM register or a 128-bit memory location. The first source operand and destination operand are XMM registers. Bits (MAXVL-1:128) of the corresponding YMM register are zeroed."},{"name":"\u200b","value":"VEX.256 encoded version: The first source operand is a YMM register. The second source operand is a YMM register or a 256-bit memory location. The destination operand is a YMM register."},{"name":"\u200b","value":"EVEX encoded VPCMPGTD: The first source operand (second operand) is a ZMM/YMM/XMM register. The second source operand can be a ZMM/YMM/XMM register, a 512/256/128-bit memory location or a 512/256/128-bit vector broadcasted from a 32-bit memory location. The destination operand (first operand) is a mask register updated according to the writemask k2."},{"name":"\u200b","value":"EVEX encoded VPCMPGTB/W: The first source operand (second operand) is a ZMM/YMM/XMM register. The second source operand can be a ZMM/YMM/XMM register, a 512/256/128-bit memory location. The destination operand (first operand) is a mask register updated according to the writemask k2."},{"name":"CPUID Flags","value":"MMX"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}