{"title":"MOVDQ2Q â€” Move Quadword from XMM to MMX Technology Register","fields":[{"name":"Description","value":"Moves the low quadword from the source operand (second operand) to the destination operand (first operand). The source operand is an XMM register and the destination operand is an MMX technology register."},{"name":"\u200b","value":"This instruction causes a transition from x87 FPU to MMX technology operation (that is, the x87 FPU top-of-stack pointer is set to 0 and the x87 FPU tag word is set to all 0s [valid]). If this instruction is executed while an x87 FPU floating-point exception is pending, the exception is handled before the MOVDQ2Q instruction is executed."},{"name":"\u200b","value":"In 64-bit mode, use of the REX.R prefix permits this instruction to access additional registers (XMM8-XMM15)."},{"name":"C/C++ Intrinsics","value":"`MOVDQ2Q: __m64 _mm_movepi64_pi64 ( __m128i a)\n`"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}