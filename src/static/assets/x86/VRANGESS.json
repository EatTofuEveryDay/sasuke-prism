{"title":"VRANGESS â€” Range Restriction Calculation From a Pair of Scalar Float32 Values","fields":[{"name":"Instruction Modes","value":"`VRANGESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8`"},{"name":"Description","value":"This instruction calculates a range operation output from two input single-precision FP values in the low dword element of the first source operand (the second operand) and second source operand (the third operand). The range output is written to the low dword element of the destination operand (the first operand) under the writemask k1."},{"name":"\u200b","value":"Bits7:4 of imm8 byte must be zero. The range operation output is performed in two parts, each configured by a two-bit control field within imm8[3:0]:"},{"name":"C/C++ Intriniscs","value":"`VRANGESS __m128 _mm_range_ss ( __m128 a, __m128 b, int imm);\n`"},{"name":"\u200b","value":"`VRANGESS __m128 _mm_range_round_ss ( __m128 a, __m128 b, int imm, int sae);\n`"},{"name":"\u200b","value":"`VRANGESS __m128 _mm_mask_range_ss (__m128 s, __mmask8 k, __m128 a, __m128 b, int imm);\n`"},{"name":"\u200b","value":"`VRANGESS __m128 _mm_mask_range_round_ss (__m128 s, __mmask8 k, __m128 a, __m128 b, int imm, int sae);\n`"},{"name":"\u200b","value":"`VRANGESS __m128 _mm_maskz_range_ss ( __mmask8 k, __m128 a, __m128 b, int imm);\n`"},{"name":"\u200b","value":"`VRANGESS __m128 _mm_maskz_range_round_ss ( __mmask8 k, __m128 a, __m128 b, int imm, int sae);\n`"},{"name":"CPUID Flags","value":"AVX512DQ"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}