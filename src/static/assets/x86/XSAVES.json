{"title":"XSAVES — Save Processor Extended States Supervisor","fields":[{"name":"Instruction Modes","value":"`XSAVES mem`\n`XSAVES64 mem`"},{"name":"Description","value":"Performs a full or partial save of processor state components to the XSAVE area located at the memory address specified by the destination operand. The implicit EDX:EAX register pair specifies a 64-bit instruction mask. The specific state components saved correspond to the bits set in the requested-feature bitmap (RFBM), the logicalAND of EDX:EAX and the logical-OR of XCR0 with the IA32_XSS MSR. XSAVES may be executed only if CPL = 0."},{"name":"\u200b","value":"The format of the XSAVE area is detailed in Section 13.4, “XSAVE Area,” of Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1. Like FXRSTOR and FXSAVE, the memory format used for x87 state depends on a REX.W prefix; see Section 13.5.1, “x87 State” of Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1."},{"name":"\u200b","value":"Section 13.11, “Operation of XSAVES,” of Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1 provides a detailed description of the operation of the XSAVES instruction. The following items provide a highlevel outline:"},{"name":"C/C++ Intriniscs","value":"`XSAVES: void _xsaves( void * , unsigned __int64);\n`"},{"name":"\u200b","value":"`XSAVES64: void _xsaves64( void * , unsigned __int64);\n`"},{"name":"CPUID Flags","value":"XSS"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}