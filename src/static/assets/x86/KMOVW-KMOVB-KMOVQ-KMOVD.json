{"title":"KMOVW/KMOVB/KMOVQ/KMOVD — Move from and to Mask Registers","fields":[{"name":"Instruction Modes","value":"`KMOVW k1, k2/m16`\n`KMOVB k1, k2/m8`\n`KMOVQ k1, k2/m64`\n`KMOVD k1, k2/m32`\n`KMOVW m16, k1`\n`KMOVB m8, k1`\n`KMOVQ m64, k1`\n`KMOVD m32, k1`\n`KMOVW k1, r32`\n`KMOVB k1, r32`\n`KMOVQ k1, r64`\n`KMOVD k1, r32`\n`KMOVW r32, k1`\n`KMOVB r32, k1`\n`KMOVQ r64, k1`\n`KMOVD r32, k1`"},{"name":"Description","value":"Copies values from the source operand (second operand) to the destination operand (first operand). The source and destination operands can be mask registers, memory location or general purpose. The instruction cannot be used to transfer data between general purpose registers and or memory locations."},{"name":"\u200b","value":"When moving to a mask register, the result is zero extended to MAX_KL size (i.e., 64 bits currently). When moving to a general-purpose register (GPR), the result is zero-extended to the size of the destination. In 32-bit mode, the default GPR destination’s size is 32 bits. In 64-bit mode, the default GPR destination’s size is 64 bits. Note that VEX.W can only be used to modify the size of the GPR operand in 64b mode."},{"name":"C/C++ Intriniscs","value":"`KMOVW __mmask16 _mm512_kmov(__mmask16 a);\n`"},{"name":"CPUID Flags","value":"AVX512F"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}