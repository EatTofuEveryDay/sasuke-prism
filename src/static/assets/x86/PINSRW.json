{"title":"PINSRW — Insert Word","fields":[{"name":"Instruction Modes","value":"`ib1 PINSRW mm, r32/m16, imm8`\n`ib PINSRW xmm, r32/m16, imm8`\n`ib VPINSRW xmm1, xmm2, r32/m16, imm8`\n`ib VPINSRW xmm1, xmm2, r32/m16, imm8`"},{"name":"Description","value":"Copies a word from the source operand (second operand) and inserts it in the destination operand (first operand) at the location specified with the count operand (third operand). (The other words in the destination register are left untouched.) The source operand can be a general-purpose register or a 16-bit memory location. (When the source operand is a general-purpose register, the low word of the register is copied.) The destination operand can be an MMX technology register or an XMM register. The count operand is an 8-bit immediate. When specifying a word location in an MMX technology register, the 2 least-significant bits of the count operand specify the location; for an XMM register, the 3 least-significant bits specify the location."},{"name":"\u200b","value":"In 64-bit mode and not encoded with VEX/EVEX, using a REX prefix in the form of REX.R permits this instruction to access additional registers (XMM8-XMM15, R8-15)."},{"name":"\u200b","value":"128-bit Legacy SSE version: Bits (MAXVL-1:128) of the corresponding YMM destination register remain unchanged."},{"name":"\u200b","value":"VEX.128 encoded version: Bits (MAXVL-1:128) of the destination YMM register are zeroed. VEX.L must be 0, otherwise the instruction will #UD."},{"name":"\u200b","value":"EVEX.128 encoded version: Bits (MAXVL-1:128) of the destination register are zeroed. EVEX.L’L must be 0, otherwise the instruction will #UD."},{"name":"C/C++ Intrinsics","value":"`PINSRW: __m64 _mm_insert_pi16 (__m64 a, int d, int n)\n`"},{"name":"\u200b","value":"`PINSRW: __m128i _mm_insert_epi16 ( __m128i a, int b, int imm)\n`"},{"name":"CPUID Flags","value":"SSE"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}