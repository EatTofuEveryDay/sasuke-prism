{"title":"FSTSW/FNSTSW — Store x87 FPU Status Word","fields":[{"name":"Instruction Modes","value":"`FSTSW m2byte`\n`FSTSW AX`\n`FNSTSW* m2byte`\n`FNSTSW* AX`"},{"name":"Description","value":"Stores the current value of the x87 FPU status word in the destination location. The destination operand can be either a two-byte memory location or the AX register. The FSTSW instruction checks for and handles pending unmasked floating-point exceptions before storing the status word; the FNSTSW instruction does not."},{"name":"\u200b","value":"The FNSTSW AX form of the instruction is used primarily in conditional branching (for instance, after an FPU comparison instruction or an FPREM, FPREM1, or FXAM instruction), where the direction of the branch depends on the state of the FPU condition code flags. (See the section titled “Branching and Conditional Moves on FPU Condition Codes” in Chapter 8 of the Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1.) This instruction can also be used to invoke exception handlers (by examining the exception flags) in environments that do not use interrupts. When the FNSTSW AX instruction is executed, the AX register is updated before the processor executes any further instructions. The status stored in the AX register is thus guaranteed to be from the completion of the prior FPU instruction."},{"name":"\u200b","value":"The assembler issues two instructions for the FSTSW instruction (an FWAIT instruction followed by an FNSTSW instruction), and the processor executes each of these instructions separately. If an exception is generated for either of these instructions, the save EIP points to the instruction that caused the exception."},{"name":"\u200b","value":"This instruction’s operation is the same in non-64-bit modes and 64-bit mode."}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}