{"title":"PHADDW/PHADDD — Packed Horizontal Add","fields":[{"name":"Instruction Modes","value":"`PHADDW mm1, mm2/m64`\n`PHADDW xmm1, xmm2/m128`\n`PHADDD mm1, mm2/m64`\n`PHADDD xmm1, xmm2/m128`\n`VPHADDW xmm1, xmm2, xmm3/m128`\n`VPHADDD xmm1, xmm2, xmm3/m128`\n`VPHADDW ymm1, ymm2, ymm3/m256`\n`VPHADDD ymm1, ymm2, ymm3/m256`"},{"name":"Description","value":"(V)PHADDW adds two adjacent 16-bit signed integers horizontally from the source and destination operands and packs the 16-bit signed results to the destination operand (first operand). (V)PHADDD adds two adjacent 32-bit signed integers horizontally from the source and destination operands and packs the 32-bit signed results to the destination operand (first operand). When the source operand is a 128-bit memory operand, the operand must be aligned on a 16-byte boundary or a general-protection exception (#GP) will be generated."},{"name":"\u200b","value":"Note that these instructions can operate on either unsigned or signed (two’s complement notation) integers; however, it does not set bits in the EFLAGS register to indicate overflow and/or a carry. To prevent undetected overflow conditions, software must control the ranges of the values operated on."},{"name":"\u200b","value":"Legacy SSE instructions: Both operands can be MMX registers. The second source operand can be an MMX register or a 64-bit memory location."},{"name":"\u200b","value":"128-bit Legacy SSE version: The first source and destination operands are XMM registers. The second source operand can be an XMM register or a 128-bit memory location. Bits (MAXVL-1:128) of the corresponding YMM destination register remain unchanged."},{"name":"\u200b","value":"In 64-bit mode, use the REX prefix to access additional registers."},{"name":"\u200b","value":"VEX.128 encoded version: The first source and destination operands are XMM registers. The second source operand can be an XMM register or a 128-bit memory location. Bits (MAXVL-1:128) of the corresponding YMM register are zeroed."},{"name":"\u200b","value":"VEX.256 encoded version: Horizontal addition of two adjacent data elements of the low 16-bytes of the first and second source operands are packed into the low 16-bytes of the destination operand. Horizontal addition of two adjacent data elements of the high 16-bytes of the first and second source operands are packed into the high 16-bytes of the destination operand. The first source and destination operands are YMM registers. The second source operand can be an YMM register or a 256-bit memory location."},{"name":"\u200b","value":"Note: VEX.L must be 0, otherwise the instruction will #UD."},{"name":"CPUID Flags","value":"SSSE3"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}