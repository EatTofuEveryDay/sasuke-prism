{"title":"MOVLPD — Move Low Packed Double-Precision Floating-Point Value","fields":[{"name":"Instruction Modes","value":"`MOVLPD xmm1, m64`\n`VMOVLPD xmm2, xmm1, m64`\n`VMOVLPD xmm2, xmm1, m64`\n`MOVLPD m64, xmm1`\n`VMOVLPD m64, xmm1`\n`VMOVLPD m64, xmm1`"},{"name":"Description","value":"This instruction cannot be used for register to register or memory to memory moves."},{"name":"\u200b","value":"128-bit Legacy SSE load:"},{"name":"\u200b","value":"Moves a double-precision floating-point value from the source 64-bit memory operand and stores it in the low 64-bits of the destination XMM register. The upper 64bits of the XMM register are preserved. Bits (MAXVL-1:128) of the corresponding destination register are preserved."},{"name":"\u200b","value":"VEX.128 &amp; EVEX encoded load:"},{"name":"\u200b","value":"Loads a double-precision floating-point value from the source 64-bit memory operand (third operand), merges it with the upper 64-bits of the first source XMM register (second operand), and stores it in the low 128-bits of the destination XMM register (first operand). Bits (MAXVL-1:128) of the corresponding destination register are zeroed."},{"name":"\u200b","value":"128-bit store:"},{"name":"\u200b","value":"Stores a double-precision floating-point value from the low 64-bits of the XMM register source (second operand) to the 64-bit memory location (first operand)."},{"name":"\u200b","value":"Note: VMOVLPD (store) (VEX.128.66.0F 13 /r) is legal and has the same behavior as the existing 66 0F 13 store. For VMOVLPD (store) VEX.vvvv and EVEX.vvvv are reserved and must be 1111b otherwise instruction will #UD."},{"name":"\u200b","value":"If VMOVLPD is encoded with VEX.L or EVEX.L’L= 1, an attempt to execute the instruction encoded with VEX.L or EVEX.L’L= 1 will cause an #UD exception."},{"name":"C/C++ Intriniscs","value":"`MOVLPD __m128d _mm_loadl_pd ( __m128d a, double *p)\n`"},{"name":"\u200b","value":"`MOVLPD void _mm_storel_pd (double *p, __m128d a)\n`"},{"name":"CPUID Flags","value":"SSE2"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}