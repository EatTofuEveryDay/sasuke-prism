{"title":"SUB — Subtract","fields":[{"name":"Instruction Modes","value":"`SUB AL, imm8`\n`SUB AX, imm16`\n`SUB EAX, imm32`\n`SUB RAX, imm32`\n`SUB r/m8, imm8`\n`SUB r/m8*, imm8`\n`SUB r/m16, imm16`\n`SUB r/m32, imm32`\n`SUB r/m64, imm32`\n`SUB r/m16, imm8`\n`SUB r/m32, imm8`\n`SUB r/m64, imm8`\n`SUB r/m8, r8`\n`SUB r/m8*, r8*`\n`SUB r/m16, r16`\n`SUB r/m32, r32`\n`SUB r/m64, r64`\n`SUB r8, r/m8`\n`SUB r8*, r/m8*`\n`SUB r16, r/m16`\n`SUB r32, r/m32`\n`SUB r64, r/m64`"},{"name":"Description","value":"Subtracts the second operand (source operand) from the first operand (destination operand) and stores the result in the destination operand. The destination operand can be a register or a memory location; the source operand can be an immediate, register, or memory location. (However, two memory operands cannot be used in one instruction.) When an immediate value is used as an operand, it is sign-extended to the length of the destination operand format."},{"name":"\u200b","value":"The SUB instruction performs integer subtraction. It evaluates the result for both signed and unsigned integer operands and sets the OF and CF flags to indicate an overflow in the signed or unsigned result, respectively. The SF flag indicates the sign of the signed result."},{"name":"\u200b","value":"In 64-bit mode, the instruction’s default operation size is 32 bits. Using a REX prefix in the form of REX.R permits access to additional registers (R8-R15). Using a REX prefix in the form of REX.W promotes operation to 64 bits. See the summary chart at the beginning of this section for encoding data and limits."},{"name":"\u200b","value":"This instruction can be used with a LOCK prefix to allow the instruction to be executed atomically."}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}