{"title":"MOVHPS — Move High Packed Single-Precision Floating-Point Values","fields":[{"name":"Instruction Modes","value":"`MOVHPS xmm1, m64`\n`VMOVHPS xmm2, xmm1, m64`\n`VMOVHPS xmm2, xmm1, m64`\n`MOVHPS m64, xmm1`\n`VMOVHPS m64, xmm1`\n`VMOVHPS m64, xmm1`"},{"name":"Description","value":"This instruction cannot be used for register to register or memory to memory moves."},{"name":"\u200b","value":"128-bit Legacy SSE load:"},{"name":"\u200b","value":"Moves two packed single-precision floating-point values from the source 64-bit memory operand and stores them in the high 64-bits of the destination XMM register. The lower 64bits of the XMM register are preserved. Bits (MAXVL-1:128) of the corresponding destination register are preserved."},{"name":"\u200b","value":"VEX.128 &amp; EVEX encoded load:"},{"name":"\u200b","value":"Loads two single-precision floating-point values from the source 64-bit memory operand (the third operand) and stores it in the upper 64-bits of the destination XMM register (first operand). The low 64-bits from the first source operand (the second operand) are copied to the lower 64-bits of the destination. Bits (MAXVL-1:128) of the corresponding destination register are zeroed."},{"name":"\u200b","value":"128-bit store:"},{"name":"\u200b","value":"Stores two packed single-precision floating-point values from the high 64-bits of the XMM register source (second operand) to the 64-bit memory location (first operand)."},{"name":"\u200b","value":"Note: VMOVHPS (store) (VEX.128.0F 17 /r) is legal and has the same behavior as the existing 0F 17 store. For VMOVHPS (store) VEX.vvvv and EVEX.vvvv are reserved and must be 1111b otherwise instruction will #UD."},{"name":"\u200b","value":"If VMOVHPS is encoded with VEX.L or EVEX.L’L= 1, an attempt to execute the instruction encoded with VEX.L or EVEX.L’L= 1 will cause an #UD exception."},{"name":"C/C++ Intrinsics","value":"`MOVHPS __m128 _mm_loadh_pi ( __m128 a, __m64 *p)\n`"},{"name":"\u200b","value":"`MOVHPS void _mm_storeh_pi (__m64 *p, __m128 a)\n`"},{"name":"CPUID Flags","value":"SSE"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}