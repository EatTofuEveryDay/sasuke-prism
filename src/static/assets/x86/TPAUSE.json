{"title":"TPAUSE — Timed PAUSE","fields":[{"name":"Instruction Modes","value":"`TPAUSE r32, &lt;edx&gt;, &lt;eax&gt;`"},{"name":"Description","value":"TPAUSE instructs the processor to enter an implementation-dependent optimized state. There are two such optimized states to choose from: light-weight power/performance optimized state, and improved power/performance optimized state. The selection between the two is governed by the explicit input register bit[0] source operand."},{"name":"\u200b","value":"TPAUSE is available when CPUID.7.0:ECX.WAITPKG[bit 5] is enumerated as 1. TPAUSE may be executed at any privilege level. This instruction’s operation is the same in non-64-bit modes and in 64-bit mode."},{"name":"\u200b","value":"Unlike PAUSE, the TPAUSE instruction will not cause an abort when used inside a transactional region, described in the chapter Chapter 16, “Programming with Intel® Transactional Synchronization Extensions,” of the Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1."},{"name":"\u200b","value":"The input register contains information such as the preferred optimized state the processor should enter as described in the following table. Bits other than bit 0 are reserved and will result in #GP if non-zero."},{"name":"C/C++ Intrinsics","value":"`TPAUSE uint8_t _tpause(uint32_t control, uint64_t counter);\n`"},{"name":"CPUID Flags","value":"WAITPKG"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}