{"title":"STI â€” Set Interrupt Flag","fields":[{"name":"Instruction Modes","value":"`STI`"},{"name":"Description","value":"In most cases, STI sets the interrupt flag (IF) in the EFLAGS register. This allows the processor to respond to maskable hardware interrupts."},{"name":"\u200b","value":"If IF = 0, maskable hardware interrupts remain inhibited on the instruction boundary following an execution of STI. (The delayed effect of this instruction is provided to allow interrupts to be enabled just before returning from a procedure or subroutine. For instance, if an STI instruction is followed by an RET instruction, the RET instruction is allowed to execute before external interrupts are recognized. No interrupts can be recognized if an execution of CLI immediately follow such an execution of STI.) The inhibition ends after delivery of another event (e.g., exception) or the execution of the next instruction."},{"name":"\u200b","value":"The IF flag and the STI and CLI instructions do not prohibit the generation of exceptions and nonmaskable interrupts (NMIs). However, NMIs (and system-management interrupts) may be inhibited on the instruction boundary following an execution of STI that begins with IF = 0."},{"name":"\u200b","value":"Operation is different in two modes defined as follows:"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}