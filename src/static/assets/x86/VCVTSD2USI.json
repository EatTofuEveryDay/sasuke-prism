{"title":"VCVTSD2USI — Convert Scalar Double-Precision Floating-Point Value to Unsigned Doubleword Integer","fields":[{"name":"Instruction Modes","value":"`VCVTSD2USI r32, xmm1/m64{er}`\n`VCVTSD2USI r64, xmm1/m64{er}`"},{"name":"Description","value":"Converts a double-precision floating-point value in the source operand (the second operand) to an unsigned doubleword integer in the destination operand (the first operand). The source operand can be an XMM register or a 64-bit memory location. The destination operand is a general-purpose register. When the source operand is an XMM register, the double-precision floating-point value is contained in the low quadword of the register."},{"name":"\u200b","value":"When a conversion is inexact, the value returned is rounded according to the rounding control bits in the MXCSR register or the embedded rounding control bits. If a converted result cannot be represented in the destination format, the floating-point invalid exception is raised, and if this exception is masked, the integer value 2w – 1 is returned, where w represents the number of bits in the destination format."},{"name":"C/C++ Intrinsics","value":"`VCVTSD2USI unsigned int _mm_cvtsd_u32(__m128d);\n`"},{"name":"\u200b","value":"`VCVTSD2USI unsigned int _mm_cvt_roundsd_u32(__m128d, int r);\n`"},{"name":"\u200b","value":"`VCVTSD2USI unsigned __int64 _mm_cvtsd_u64(__m128d);\n`"},{"name":"\u200b","value":"`VCVTSD2USI unsigned __int64 _mm_cvt_roundsd_u64(__m128d, int r);\n`"},{"name":"CPUID Flags","value":"AVX512F"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}