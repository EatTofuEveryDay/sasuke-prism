{"title":"VRANGESD â€” Range Restriction Calculation From a pair of Scalar Float64 Values","fields":[{"name":"Instruction Modes","value":"`VRANGESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8`"},{"name":"Description","value":"This instruction calculates a range operation output from two input double-precision FP values in the low qword element of the first source operand (the second operand) and second source operand (the third operand). The range output is written to the low qword element of the destination operand (the first operand) under the writemask k1."},{"name":"\u200b","value":"Bits7:4 of imm8 byte must be zero. The range operation output is performed in two parts, each configured by a two-bit control field within imm8[3:0]:"},{"name":"C/C++ Intriniscs","value":"`VRANGESD __m128d _mm_range_sd ( __m128d a, __m128d b, int imm);\n`"},{"name":"\u200b","value":"`VRANGESD __m128d _mm_range_round_sd ( __m128d a, __m128d b, int imm, int sae);\n`"},{"name":"\u200b","value":"`VRANGESD __m128d _mm_mask_range_sd (__m128d s, __mmask8 k, __m128d a, __m128d b, int imm);\n`"},{"name":"\u200b","value":"`VRANGESD __m128d _mm_mask_range_round_sd (__m128d s, __mmask8 k, __m128d a, __m128d b, int imm, int sae);\n`"},{"name":"\u200b","value":"`VRANGESD __m128d _mm_maskz_range_sd ( __mmask8 k, __m128d a, __m128d b, int imm);\n`"},{"name":"\u200b","value":"`VRANGESD __m128d _mm_maskz_range_round_sd ( __mmask8 k, __m128d a, __m128d b, int imm, int sae);\n`"},{"name":"CPUID Flags","value":"AVX512DQ"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}