{"title":"VFMADD132SS/VFMADD213SS/VFMADD231SS â€” Fused Multiply-Add of Scalar Single-Precision Floating-Point Values","fields":[{"name":"Instruction Modes","value":"`VFMADD132SS xmm1, xmm2, xmm3/m32`\n`VFMADD213SS xmm1, xmm2, xmm3/m32`\n`VFMADD231SS xmm1, xmm2, xmm3/m32`\n`VFMADD132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}`\n`VFMADD213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}`\n`VFMADD231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}`"},{"name":"Description","value":"Performs a SIMD multiply-add computation on single-precision floating-point values using three source operands and writes the multiply-add results in the destination operand. The destination operand is also the first source operand. The first and second operands are XMM registers. The third source operand can be a XMM register or a 32-bit memory location."},{"name":"\u200b","value":"VFMADD132SS: Multiplies the low single-precision floating-point value from the first source operand to the low single-precision floating-point value in the third source operand, adds the infinite precision intermediate result to the low single-precision floating-point value in the second source operand, performs rounding and stores the resulting single-precision floating-point value to the destination operand (first source operand)."},{"name":"\u200b","value":"VFMADD213SS: Multiplies the low single-precision floating-point value from the second source operand to the low single-precision floating-point value in the first source operand, adds the infinite precision intermediate result to the low single-precision floating-point value in the third source operand, performs rounding and stores the resulting single-precision floating-point value to the destination operand (first source operand)."},{"name":"\u200b","value":"VFMADD231SS: Multiplies the low single-precision floating-point value from the second source operand to the low single-precision floating-point value in the third source operand, adds the infinite precision intermediate result to the low single-precision floating-point value in the first source operand, performs rounding and stores the resulting single-precision floating-point value to the destination operand (first source operand)."},{"name":"\u200b","value":"VEX.128 and EVEX encoded version: The destination operand (also first source operand) is encoded in reg_field. The second source operand is encoded in VEX.vvvv/EVEX.vvvv. The third source operand is encoded in rm_field. Bits 127:32 of the destination are unchanged. Bits MAXVL-1:128 of the destination register are zeroed."},{"name":"\u200b","value":"EVEX encoded version: The low doubleword element of the destination is updated according to the writemask."},{"name":"\u200b","value":"Compiler tools may optionally support a complementary mnemonic for each instruction mnemonic listed in the opcode/instruction column of the summary table. The behavior of the complementary mnemonic in situations involving NANs are governed by the definition of the instruction mnemonic defined in the opcode/instruction column."},{"name":"C/C++ Intrinsics","value":"`VFMADDxxxSS __m128 _mm_fmadd_round_ss(__m128 a, __m128 b, __m128 c, int r);\n`"},{"name":"\u200b","value":"`VFMADDxxxSS __m128 _mm_mask_fmadd_ss(__m128 a, __mmask8 k, __m128 b, __m128 c);\n`"},{"name":"\u200b","value":"`VFMADDxxxSS __m128 _mm_maskz_fmadd_ss(__mmask8 k, __m128 a, __m128 b, __m128 c);\n`"},{"name":"\u200b","value":"`VFMADDxxxSS __m128 _mm_mask3_fmadd_ss(__m128 a, __m128 b, __m128 c, __mmask8 k);\n`"},{"name":"\u200b","value":"`VFMADDxxxSS __m128 _mm_mask_fmadd_round_ss(__m128 a, __mmask8 k, __m128 b, __m128 c, int r);\n`"},{"name":"\u200b","value":"`VFMADDxxxSS __m128 _mm_maskz_fmadd_round_ss(__mmask8 k, __m128 a, __m128 b, __m128 c, int r);\n`"},{"name":"\u200b","value":"`VFMADDxxxSS __m128 _mm_mask3_fmadd_round_ss(__m128 a, __m128 b, __m128 c, __mmask8 k, int r);\n`"},{"name":"\u200b","value":"`VFMADDxxxSS __m128 _mm_fmadd_ss (__m128 a, __m128 b, __m128 c);\n`"},{"name":"CPUID Flags","value":"FMA"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}