{"title":"VRANGEPD â€” Range Restriction Calculation For Packed Pairs of Float64 Values","fields":[{"name":"Instruction Modes","value":"`ib VRANGEPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8`\n`ib VRANGEPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8`\n`ib VRANGEPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}, imm8`"},{"name":"Description","value":"This instruction calculates 2/4/8 range operation outputs from two sets of packed input double-precision FP values in the first source operand (the second operand) and the second source operand (the third operand). The range outputs are written to the destination operand (the first operand) under the writemask k1."},{"name":"\u200b","value":"Bits7:4 of imm8 byte must be zero. The range operation output is performed in two parts, each configured by a two-bit control field within imm8[3:0]:"},{"name":"C/C++ Intrinsics","value":"`VRANGEPD __m512d _mm512_range_pd ( __m512d a, __m512d b, int imm);\n`"},{"name":"\u200b","value":"`VRANGEPD __m512d _mm512_range_round_pd ( __m512d a, __m512d b, int imm, int sae);\n`"},{"name":"\u200b","value":"`VRANGEPD __m512d _mm512_mask_range_pd (__m512 ds, __mmask8 k, __m512d a, __m512d b, int imm);\n`"},{"name":"\u200b","value":"`VRANGEPD __m512d _mm512_mask_range_round_pd (__m512d s, __mmask8 k, __m512d a, __m512d b, int imm, int sae);\n`"},{"name":"\u200b","value":"`VRANGEPD __m512d _mm512_maskz_range_pd ( __mmask8 k, __m512d a, __m512d b, int imm);\n`"},{"name":"\u200b","value":"`VRANGEPD __m512d _mm512_maskz_range_round_pd ( __mmask8 k, __m512d a, __m512d b, int imm, int sae);\n`"},{"name":"\u200b","value":"`VRANGEPD __m256d _mm256_range_pd ( __m256d a, __m256d b, int imm);\n`"},{"name":"\u200b","value":"`VRANGEPD __m256d _mm256_mask_range_pd (__m256d s, __mmask8 k, __m256d a, __m256d b, int imm);\n`"},{"name":"\u200b","value":"`VRANGEPD __m256d _mm256_maskz_range_pd ( __mmask8 k, __m256d a, __m256d b, int imm);\n`"},{"name":"\u200b","value":"`VRANGEPD __m128d _mm_range_pd ( __m128 a, __m128d b, int imm);\n`"},{"name":"\u200b","value":"`VRANGEPD __m128d _mm_mask_range_pd (__m128 s, __mmask8 k, __m128d a, __m128d b, int imm);\n`"},{"name":"\u200b","value":"`VRANGEPD __m128d _mm_maskz_range_pd ( __mmask8 k, __m128d a, __m128d b, int imm);\n`"},{"name":"CPUID Flags","value":"AVX512VL AVX512DQ"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}