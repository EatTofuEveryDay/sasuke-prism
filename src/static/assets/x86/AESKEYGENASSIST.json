{"title":"AESKEYGENASSIST â€” AES Round Key Generation Assist","fields":[{"name":"Instruction Modes","value":"`ib AESKEYGENASSIST xmm1, xmm2/m128, imm8`\n`ib VAESKEYGENASSIST xmm1, xmm2/m128, imm8`"},{"name":"Description","value":"Assist in expanding the AES cipher key, by computing steps towards generating a round key for encryption, using 128-bit data specified in the source operand and an 8-bit round constant specified as an immediate, store the result in the destination operand."},{"name":"\u200b","value":"The destination operand is an XMM register. The source operand can be an XMM register or a 128-bit memory location."},{"name":"\u200b","value":"128-bit Legacy SSE version: Bits (MAXVL-1:128) of the corresponding YMM destination register remain unchanged."},{"name":"\u200b","value":"VEX.128 encoded version: Bits (MAXVL-1:128) of the destination YMM register are zeroed."},{"name":"\u200b","value":"Note: In VEX-encoded versions, VEX.vvvv is reserved and must be 1111b, otherwise instructions will #UD."},{"name":"C/C++ Intrinsics","value":"`(V)AESKEYGENASSIST: __m128i _mm_aeskeygenassist (__m128i, const int)\n`"},{"name":"CPUID Flags","value":"AES"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}