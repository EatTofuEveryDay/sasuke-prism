{"title":"CVTSS2SI â€” Convert Scalar Single-Precision Floating-Point Value to Doubleword Integer","fields":[{"name":"Instruction Modes","value":"`CVTSS2SI r32, xmm1/m32`\n`CVTSS2SI r64, xmm1/m32`\n`1 VCVTSS2SI r32, xmm1/m32`\n`1 VCVTSS2SI r64, xmm1/m32`\n`VCVTSS2SI r32, xmm1/m32{er}`\n`VCVTSS2SI r64, xmm1/m32{er}`"},{"name":"Description","value":"Converts a single-precision floating-point value in the source operand (the second operand) to a signed doubleword integer (or signed quadword integer if operand size is 64 bits) in the destination operand (the first operand). The source operand can be an XMM register or a memory location. The destination operand is a general-purpose register. When the source operand is an XMM register, the single-precision floating-point value is contained in the low doubleword of the register."},{"name":"\u200b","value":"When a conversion is inexact, the value returned is rounded according to the rounding control bits in the MXCSR register or the embedded rounding control bits. If a converted result cannot be represented in the destination format, the floating-point invalid exception is raised, and if this exception is masked, the indefinite integer value (2w-1, where w represents the number of bits in the destination format) is returned."},{"name":"\u200b","value":"Legacy SSE instructions: In 64-bit mode, Use of the REX.W prefix promotes the instruction to produce 64-bit data. See the summary chart at the beginning of this section for encoding data and limits."},{"name":"\u200b","value":"VEX.W1 and EVEX.W1 versions: promotes the instruction to produce 64-bit data in 64-bit mode."},{"name":"\u200b","value":"Note: VEX.vvvv and EVEX.vvvv are reserved and must be 1111b, otherwise instructions will #UD."},{"name":"\u200b","value":"Software should ensure VCVTSS2SI is encoded with VEX.L=0. Encoding VCVTSS2SI with VEX.L=1 may encounter unpredictable behavior across different processor generations."},{"name":"C/C++ Intrinsics","value":"`VCVTSS2SI int _mm_cvtss_i32( __m128 a);\n`"},{"name":"\u200b","value":"`VCVTSS2SI int _mm_cvt_roundss_i32( __m128 a, int r);\n`"},{"name":"\u200b","value":"`VCVTSS2SI __int64 _mm_cvtss_i64( __m128 a);\n`"},{"name":"\u200b","value":"`VCVTSS2SI __int64 _mm_cvt_roundss_i64( __m128 a, int r);\n`"},{"name":"CPUID Flags","value":"SSE"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}