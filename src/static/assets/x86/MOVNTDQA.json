{"title":"MOVNTDQA â€” Load Double Quadword Non-Temporal Aligned Hint","fields":[{"name":"Instruction Modes","value":"`MOVNTDQA xmm1, m128`\n`VMOVNTDQA xmm1, m128`\n`VMOVNTDQA ymm1, m256`\n`VMOVNTDQA xmm1, m128`\n`VMOVNTDQA ymm1, m256`\n`VMOVNTDQA zmm1, m512`"},{"name":"Description","value":"MOVNTDQA loads a double quadword from the source operand (second operand) to the destination operand (first operand) using a non-temporal hint if the memory source is WC (write combining) memory type. For WC memory type, the nontemporal hint may be implemented by loading a temporary internal buffer with the equivalent of an aligned cache line without filling this data to the cache. Any memory-type aliased lines in the cache will be snooped and flushed. Subsequent MOVNTDQA reads to unread portions of the WC cache line will receive data from the temporary internal buffer if data is available. The temporary internal buffer may be flushed by the processor at any time for any reason, for example:"},{"name":"C/C++ Intriniscs","value":"`VMOVNTDQA __m512i _mm512_stream_load_si512(__m512i const* p);\n`"},{"name":"\u200b","value":"`MOVNTDQA __m128i _mm_stream_load_si128 (const __m128i *p);\n`"},{"name":"\u200b","value":"`VMOVNTDQA __m256i _mm256_stream_load_si256 (__m256i const* p);\n`"},{"name":"CPUID Flags","value":"SSE4_1"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}