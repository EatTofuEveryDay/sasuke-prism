{"title":"UNPCKHPD — Unpack and Interleave High Packed Double-Precision Floating-Point Values","fields":[{"name":"Instruction Modes","value":"`UNPCKHPD xmm1, xmm2/m128`\n`VUNPCKHPD xmm1,xmm2, xmm3/m128`\n`VUNPCKHPD ymm1,ymm2, ymm3/m256`\n`VUNPCKHPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst`\n`VUNPCKHPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst`\n`VUNPCKHPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst`"},{"name":"Description","value":"Performs an interleaved unpack of the high double-precision floating-point values from the first source operand and the second source operand. See Figure 4-15 in the Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 2B."},{"name":"\u200b","value":"128-bit Legacy SSE version: The second source can be an XMM register or an 128-bit memory location. The destination is not distinct from the first source XMM register and the upper bits (MAXVL-1:128) of the corresponding ZMM register destination are unmodified. When unpacking from a memory operand, an implementation may fetch only the appropriate 64 bits; however, alignment to 16-byte boundary and normal segment checking will still be enforced."},{"name":"\u200b","value":"VEX.128 encoded version: The first source operand is a XMM register. The second source operand can be a XMM register or a 128-bit memory location. The destination operand is a XMM register. The upper bits (MAXVL-1:128) of the corresponding ZMM register destination are zeroed."},{"name":"\u200b","value":"VEX.256 encoded version: The first source operand is a YMM register. The second source operand can be a YMM register or a 256-bit memory location. The destination operand is a YMM register."},{"name":"\u200b","value":"EVEX.512 encoded version: The first source operand is a ZMM register. The second source operand is a ZMM register, a 512-bit memory location, or a 512-bit vector broadcasted from a 64-bit memory location. The destination operand is a ZMM register, conditionally updated using writemask k1."},{"name":"\u200b","value":"EVEX.256 encoded version: The first source operand is a YMM register. The second source operand is a YMM register, a 256-bit memory location, or a 256-bit vector broadcasted from a 64-bit memory location. The destination operand is a YMM register, conditionally updated using writemask k1."},{"name":"\u200b","value":"EVEX.128 encoded version: The first source operand is a XMM register. The second source operand is a XMM register, a 128-bit memory location, or a 128-bit vector broadcasted from a 64-bit memory location. The destination operand is a XMM register, conditionally updated using writemask k1."},{"name":"C/C++ Intriniscs","value":"`VUNPCKHPD __m512d _mm512_unpackhi_pd( __m512d a, __m512d b);\n`"},{"name":"\u200b","value":"`VUNPCKHPD __m512d _mm512_mask_unpackhi_pd(__m512d s, __mmask8 k, __m512d a, __m512d b);\n`"},{"name":"\u200b","value":"`VUNPCKHPD __m512d _mm512_maskz_unpackhi_pd(__mmask8 k, __m512d a, __m512d b);\n`"},{"name":"\u200b","value":"`VUNPCKHPD __m256d _mm256_unpackhi_pd(__m256d a, __m256d b)\n`"},{"name":"\u200b","value":"`VUNPCKHPD __m256d _mm256_mask_unpackhi_pd(__m256d s, __mmask8 k, __m256d a, __m256d b);\n`"},{"name":"\u200b","value":"`VUNPCKHPD __m256d _mm256_maskz_unpackhi_pd(__mmask8 k, __m256d a, __m256d b);\n`"},{"name":"\u200b","value":"`UNPCKHPD __m128d _mm_unpackhi_pd(__m128d a, __m128d b)\n`"},{"name":"\u200b","value":"`VUNPCKHPD __m128d _mm_mask_unpackhi_pd(__m128d s, __mmask8 k, __m128d a, __m128d b);\n`"},{"name":"\u200b","value":"`VUNPCKHPD __m128d _mm_maskz_unpackhi_pd(__mmask8 k, __m128d a, __m128d b);\n`"},{"name":"CPUID Flags","value":"SSE2"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}