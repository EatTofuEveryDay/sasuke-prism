{"title":"CVTTPD2PI â€” Convert with Truncation Packed Double-Precision FP Values to Packed Dword Integers","fields":[{"name":"Instruction Modes","value":"`CVTTPD2PI mm, xmm/m128`"},{"name":"Description","value":"Converts two packed double-precision floating-point values in the source operand (second operand) to two packed signed doubleword integers in the destination operand (first operand). The source operand can be an XMM register or a 128-bit memory location. The destination operand is an MMX technology register."},{"name":"\u200b","value":"When a conversion is inexact, a truncated (round toward zero) result is returned. If a converted result is larger than the maximum signed doubleword integer, the floating-point invalid exception is raised, and if this exception is masked, the indefinite integer value (80000000H) is returned."},{"name":"\u200b","value":"This instruction causes a transition from x87 FPU to MMX technology operation (that is, the x87 FPU top-of-stack pointer is set to 0 and the x87 FPU tag word is set to all 0s [valid]). If this instruction is executed while an x87 FPU floating-point exception is pending, the exception is handled before the CVTTPD2PI instruction is executed."},{"name":"\u200b","value":"In 64-bit mode, use of the REX.R prefix permits this instruction to access additional registers (XMM8-XMM15)."},{"name":"C/C++ Intrinsics","value":"`CVTTPD1PI: __m64 _mm_cvttpd_pi32(__m128d a)\n`"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}