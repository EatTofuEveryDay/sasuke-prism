{"title":"VCVTQQ2PS â€” Convert Packed Quadword Integers to Packed Single-Precision Floating-Point Values","fields":[{"name":"Instruction Modes","value":"`VCVTQQ2PS xmm1 {k1}{z}, xmm2/m128/m64bcst`\n`VCVTQQ2PS xmm1 {k1}{z}, ymm2/m256/m64bcst`\n`VCVTQQ2PS ymm1 {k1}{z}, zmm2/m512/m64bcst{er}`"},{"name":"Description","value":"Converts packed quadword integers in the source operand (second operand) to packed single-precision floating-point values in the destination operand (first operand)."},{"name":"\u200b","value":"The source operand is a ZMM/YMM/XMM register or a 512/256/128-bit memory location. The destination operation is a YMM/XMM/XMM (lower 64 bits) register conditionally updated with writemask k1."},{"name":"\u200b","value":"EVEX.vvvv is reserved and must be 1111b otherwise instructions will #UD."},{"name":"C/C++ Intrinsics","value":"`VCVTQQ2PS __m256 _mm512_cvtepi64_ps( __m512i a);\n`"},{"name":"\u200b","value":"`VCVTQQ2PS __m256 _mm512_mask_cvtepi64_ps( __m256 s, __mmask16 k, __m512i a);\n`"},{"name":"\u200b","value":"`VCVTQQ2PS __m256 _mm512_maskz_cvtepi64_ps( __mmask16 k, __m512i a);\n`"},{"name":"\u200b","value":"`VCVTQQ2PS __m256 _mm512_cvt_roundepi64_ps( __m512i a, int r);\n`"},{"name":"\u200b","value":"`VCVTQQ2PS __m256 _mm512_mask_cvt_roundepi_ps( __m256 s, __mmask8 k, __m512i a, int r);\n`"},{"name":"\u200b","value":"`VCVTQQ2PS __m256 _mm512_maskz_cvt_roundepi64_ps( __mmask8 k, __m512i a, int r);\n`"},{"name":"\u200b","value":"`VCVTQQ2PS __m128 _mm256_cvtepi64_ps( __m256i a);\n`"},{"name":"\u200b","value":"`VCVTQQ2PS __m128 _mm256_mask_cvtepi64_ps( __m128 s, __mmask8 k, __m256i a);\n`"},{"name":"\u200b","value":"`VCVTQQ2PS __m128 _mm256_maskz_cvtepi64_ps( __mmask8 k, __m256i a);\n`"},{"name":"\u200b","value":"`VCVTQQ2PS __m128 _mm_cvtepi64_ps( __m128i a);\n`"},{"name":"\u200b","value":"`VCVTQQ2PS __m128 _mm_mask_cvtepi64_ps( __m128 s, __mmask8 k, __m128i a);\n`"},{"name":"\u200b","value":"`VCVTQQ2PS __m128 _mm_maskz_cvtepi64_ps( __mmask8 k, __m128i a);\n`"},{"name":"CPUID Flags","value":"AVX512VL AVX512DQ"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}