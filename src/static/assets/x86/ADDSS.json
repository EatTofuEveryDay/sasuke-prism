{"title":"ADDSS â€” Add Scalar Single-Precision Floating-Point Values","fields":[{"name":"Instruction Modes","value":"`ADDSS xmm1, xmm2/m32`\n`VADDSS xmm1,xmm2, xmm3/m32`\n`VADDSS xmm1{k1}{z}, xmm2, xmm3/m32{er}`"},{"name":"Description","value":"Adds the low single-precision floating-point values from the second source operand and the first source operand, and stores the double-precision floating-point result in the destination operand."},{"name":"\u200b","value":"The second source operand can be an XMM register or a 64-bit memory location. The first source and destination operands are XMM registers."},{"name":"\u200b","value":"128-bit Legacy SSE version: The first source and destination operands are the same. Bits (MAXVL-1:32) of the corresponding the destination register remain unchanged."},{"name":"\u200b","value":"EVEX and VEX.128 encoded version: The first source operand is encoded by EVEX.vvvv/VEX.vvvv. Bits (127:32) of the XMM register destination are copied from corresponding bits in the first source operand. Bits (MAXVL-1:128) of the destination register are zeroed."},{"name":"\u200b","value":"EVEX version: The low doubleword element of the destination is updated according to the writemask."},{"name":"\u200b","value":"Software should ensure VADDSS is encoded with VEX.L=0. Encoding VADDSS with VEX.L=1 may encounter unpredictable behavior across different processor generations."},{"name":"C/C++ Intrinsics","value":"`VADDSS __m128 _mm_mask_add_ss (__m128 s, __mmask8 k, __m128 a, __m128 b);\n`"},{"name":"\u200b","value":"`VADDSS __m128 _mm_maskz_add_ss (__mmask8 k, __m128 a, __m128 b);\n`"},{"name":"\u200b","value":"`VADDSS __m128 _mm_add_round_ss (__m128 a, __m128 b, int);\n`"},{"name":"\u200b","value":"`VADDSS __m128 _mm_mask_add_round_ss (__m128 s, __mmask8 k, __m128 a, __m128 b, int);\n`"},{"name":"\u200b","value":"`VADDSS __m128 _mm_maskz_add_round_ss (__mmask8 k, __m128 a, __m128 b, int);\n`"},{"name":"\u200b","value":"`ADDSS __m128 _mm_add_ss (__m128 a, __m128 b);\n`"},{"name":"CPUID Flags","value":"SSE"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}