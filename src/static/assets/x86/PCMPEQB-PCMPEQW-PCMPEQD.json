{"title":"PCMPEQB/PCMPEQW/PCMPEQD â€” Compare Packed Data for Equal","fields":[{"name":"Instruction Modes","value":"`PCMPEQB mm, mm/m64`\n`PCMPEQB xmm1, xmm2/m128`\n`PCMPEQW mm, mm/m64`\n`PCMPEQW xmm1, xmm2/m128`\n`PCMPEQD mm, mm/m64`\n`PCMPEQD xmm1, xmm2/m128`\n`VPCMPEQB xmm1, xmm2, xmm3/m128`\n`VPCMPEQW xmm1, xmm2, xmm3/m128`\n`VPCMPEQD xmm1, xmm2, xmm3/m128`\n`VPCMPEQB ymm1, ymm2, ymm3 /m256`\n`VPCMPEQW ymm1, ymm2, ymm3 /m256`\n`VPCMPEQD ymm1, ymm2, ymm3 /m256`\n`VPCMPEQD k1 {k2}, xmm2, xmm3/m128/m32bcst`\n`VPCMPEQD k1 {k2}, ymm2, ymm3/m256/m32bcst`\n`VPCMPEQD k1 {k2}, zmm2, zmm3/m512/m32bcst`\n`VPCMPEQB k1 {k2}, xmm2, xmm3 /m128`"},{"name":"Description","value":"Performs a SIMD compare for equality of the packed bytes, words, or doublewords in the destination operand (first operand) and the source operand (second operand). If a pair of data elements is equal, the corresponding data element in the destination operand is set to all 1s; otherwise, it is set to all 0s."},{"name":"\u200b","value":"The (V)PCMPEQB instruction compares the corresponding bytes in the destination and source operands; the (V)PCMPEQW instruction compares the corresponding words in the destination and source operands; and the (V)PCMPEQD instruction compares the corresponding doublewords in the destination and source operands."},{"name":"\u200b","value":"In 64-bit mode and not encoded with VEX/EVEX, using a REX prefix in the form of REX.R permits this instruction to access additional registers (XMM8-XMM15)."},{"name":"\u200b","value":"Legacy SSE instructions: The source operand can be an MMX technology register or a 64-bit memory location. The destination operand can be an MMX technology register."},{"name":"\u200b","value":"128-bit Legacy SSE version: The second source operand can be an XMM register or a 128-bit memory location. The first source and destination operands are XMM registers. Bits (MAXVL-1:128) of the corresponding YMM destination register remain unchanged."},{"name":"\u200b","value":"VEX.128 encoded version: The second source operand can be an XMM register or a 128-bit memory location. The first source and destination operands are XMM registers. Bits (MAXVL-1:128) of the corresponding YMM register are zeroed."},{"name":"\u200b","value":"VEX.256 encoded version: The first source operand is a YMM register. The second source operand is a YMM register or a 256-bit memory location. The destination operand is a YMM register."},{"name":"\u200b","value":"EVEX encoded VPCMPEQD: The first source operand (second operand) is a ZMM/YMM/XMM register. The second source operand can be a ZMM/YMM/XMM register, a 512/256/128-bit memory location or a 512/256/128-bit vector broadcasted from a 32-bit memory location. The destination operand (first operand) is a mask register updated according to the writemask k2."},{"name":"\u200b","value":"EVEX encoded VPCMPEQB/W: The first source operand (second operand) is a ZMM/YMM/XMM register. The second source operand can be a ZMM/YMM/XMM register, a 512/256/128-bit memory location. The destination operand (first operand) is a mask register updated according to the writemask k2."},{"name":"CPUID Flags","value":"MMX"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}