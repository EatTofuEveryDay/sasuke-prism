{"title":"DPPS — Dot Product of Packed Single Precision Floating-Point Values","fields":[{"name":"Instruction Modes","value":"`ib DPPS xmm1, xmm2/m128, imm8`\n`ib VDPPS xmm1,xmm2, xmm3/m128, imm8`\n`ib VDPPS ymm1, ymm2, ymm3/m256, imm8`"},{"name":"Description","value":"Conditionally multiplies the packed single precision floating-point values in the destination operand (first operand) with the packed single-precision floats in the source (second operand) depending on a mask extracted from the high 4 bits of the immediate byte (third operand). If a condition mask bit in Imm8[7:4] is zero, the corresponding multiplication is replaced by a value of 0.0 in the manner described by Section 12.8.4 of Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1."},{"name":"\u200b","value":"The four resulting single-precision values are summed into an intermediate result. The intermediate result is conditionally broadcasted to the destination using a broadcast mask specified by bits [3:0] of the immediate byte."},{"name":"\u200b","value":"If a broadcast mask bit is “1”, the intermediate result is copied to the corresponding dword element in the destination operand. If a broadcast mask bit is zero, the corresponding element in the destination is set to zero."},{"name":"\u200b","value":"DPPS follows the NaN forwarding rules stated in the Software Developer’s Manual, vol. 1, table 4-7. These rules do not cover horizontal prioritization of NaNs. Horizontal propagation of NaNs to the destination and the positioning of those NaNs in the destination is implementation dependent. NaNs on the input sources or computationally generated NaNs will have at least one NaN propagated to the destination."},{"name":"\u200b","value":"128-bit Legacy SSE version: The second source can be an XMM register or an 128-bit memory location. The destination is not distinct from the first source XMM register and the upper bits (MAXVL-1:128) of the corresponding YMM register destination are unmodified."},{"name":"\u200b","value":"VEX.128 encoded version: the first source operand is an XMM register or 128-bit memory location. The destination operand is an XMM register. The upper bits (MAXVL-1:128) of the corresponding YMM register destination are zeroed."},{"name":"\u200b","value":"VEX.256 encoded version: The first source operand is a YMM register. The second source operand can be a YMM register or a 256-bit memory location. The destination operand is a YMM register."},{"name":"C/C++ Intrinsics","value":"`(V)DPPS: __m128 _mm_dp_ps ( __m128 a, __m128 b, const int mask);\n`"},{"name":"\u200b","value":"`VDPPS: __m256 _mm256_dp_ps ( __m256 a, __m256 b, const int mask);\n`"},{"name":"CPUID Flags","value":"SSE4_1"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}