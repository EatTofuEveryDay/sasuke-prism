{"title":"MULSD â€” Multiply Scalar Double-Precision Floating-Point Value","fields":[{"name":"Instruction Modes","value":"`MULSD xmm1,xmm2/m64`\n`VMULSD xmm1,xmm2, xmm3/m64`\n`VMULSD xmm1 {k1}{z}, xmm2, xmm3/m64 {er}`"},{"name":"Description","value":"Multiplies the low double-precision floating-point value in the second source operand by the low double-precision floating-point value in the first source operand, and stores the double-precision floating-point result in the destination operand. The second source operand can be an XMM register or a 64-bit memory location. The first source operand and the destination operands are XMM registers."},{"name":"\u200b","value":"128-bit Legacy SSE version: The first source operand and the destination operand are the same. Bits (MAXVL-1:64) of the corresponding destination register remain unchanged."},{"name":"\u200b","value":"VEX.128 and EVEX encoded version: The quadword at bits 127:64 of the destination operand is copied from the same bits of the first source operand. Bits (MAXVL-1:128) of the destination register are zeroed."},{"name":"\u200b","value":"EVEX encoded version: The low quadword element of the destination operand is updated according to the writemask."},{"name":"\u200b","value":"Software should ensure VMULSD is encoded with VEX.L=0. Encoding VMULSD with VEX.L=1 may encounter unpredictable behavior across different processor generations."},{"name":"C/C++ Intrinsics","value":"`VMULSD __m128d _mm_mask_mul_sd(__m128d s, __mmask8 k, __m128d a, __m128d b);\n`"},{"name":"\u200b","value":"`VMULSD __m128d _mm_maskz_mul_sd( __mmask8 k, __m128d a, __m128d b);\n`"},{"name":"\u200b","value":"`VMULSD __m128d _mm_mul_round_sd( __m128d a, __m128d b, int);\n`"},{"name":"\u200b","value":"`VMULSD __m128d _mm_mask_mul_round_sd(__m128d s, __mmask8 k, __m128d a, __m128d b, int);\n`"},{"name":"\u200b","value":"`VMULSD __m128d _mm_maskz_mul_round_sd( __mmask8 k, __m128d a, __m128d b, int);\n`"},{"name":"\u200b","value":"`MULSD __m128d _mm_mul_sd (__m128d a, __m128d b)\n`"},{"name":"CPUID Flags","value":"SSE2"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}