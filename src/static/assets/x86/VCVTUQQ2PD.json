{"title":"VCVTUQQ2PD â€” Convert Packed Unsigned Quadword Integers to Packed Double-Precision Floating-Point Values","fields":[{"name":"Instruction Modes","value":"`VCVTUQQ2PD xmm1 {k1}{z}, xmm2/m128/m64bcst`\n`VCVTUQQ2PD ymm1 {k1}{z}, ymm2/m256/m64bcst`\n`VCVTUQQ2PD zmm1 {k1}{z}, zmm2/m512/m64bcst{er}`"},{"name":"Description","value":"Converts packed unsigned quadword integers in the source operand (second operand) to packed double-precision floating-point values in the destination operand (first operand)."},{"name":"\u200b","value":"The source operand is a ZMM/YMM/XMM register, a 512/256/128-bit memory location or a 512/256/128-bit vector broadcasted from a 64-bit memory location. The destination operand is a ZMM/YMM/XMM register conditionally updated with writemask k1."},{"name":"\u200b","value":"Note: EVEX.vvvv is reserved and must be 1111b, otherwise instructions will #UD."},{"name":"C/C++ Intriniscs","value":"`VCVTUQQ2PD __m512d _mm512_cvtepu64_ps( __m512i a);\n`"},{"name":"\u200b","value":"`VCVTUQQ2PD __m512d _mm512_mask_cvtepu64_ps( __m512d s, __mmask8 k, __m512i a);\n`"},{"name":"\u200b","value":"`VCVTUQQ2PD __m512d _mm512_maskz_cvtepu64_ps( __mmask8 k, __m512i a);\n`"},{"name":"\u200b","value":"`VCVTUQQ2PD __m512d _mm512_cvt_roundepu64_ps( __m512i a, int r);\n`"},{"name":"\u200b","value":"`VCVTUQQ2PD __m512d _mm512_mask_cvt_roundepu64_ps( __m512d s, __mmask8 k, __m512i a, int r);\n`"},{"name":"\u200b","value":"`VCVTUQQ2PD __m512d _mm512_maskz_cvt_roundepu64_ps( __mmask8 k, __m512i a, int r);\n`"},{"name":"\u200b","value":"`VCVTUQQ2PD __m256d _mm256_cvtepu64_ps( __m256i a);\n`"},{"name":"\u200b","value":"`VCVTUQQ2PD __m256d _mm256_mask_cvtepu64_ps( __m256d s, __mmask8 k, __m256i a);\n`"},{"name":"\u200b","value":"`VCVTUQQ2PD __m256d _mm256_maskz_cvtepu64_ps( __mmask8 k, __m256i a);\n`"},{"name":"\u200b","value":"`VCVTUQQ2PD __m128d _mm_cvtepu64_ps( __m128i a);\n`"},{"name":"\u200b","value":"`VCVTUQQ2PD __m128d _mm_mask_cvtepu64_ps( __m128d s, __mmask8 k, __m128i a);\n`"},{"name":"\u200b","value":"`VCVTUQQ2PD __m128d _mm_maskz_cvtepu64_ps( __mmask8 k, __m128i a);\n`"},{"name":"CPUID Flags","value":"AVX512VL AVX512DQ"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}