{"title":"VCVTTPD2QQ â€” Convert with Truncation Packed Double-Precision Floating-Point Values to Packed Quadword Integers","fields":[{"name":"Instruction Modes","value":"`VCVTTPD2QQ xmm1 {k1}{z}, xmm2/m128/m64bcst`\n`VCVTTPD2QQ ymm1 {k1}{z}, ymm2/m256/m64bcst`\n`VCVTTPD2QQ zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}`"},{"name":"Description","value":"Converts with truncation packed double-precision floating-point values in the source operand (second operand) to packed quadword integers in the destination operand (first operand)."},{"name":"\u200b","value":"EVEX encoded versions: The source operand is a ZMM/YMM/XMM register or a 512/256/128-bit memory location. The destination operand is a ZMM/YMM/XMM register conditionally updated with writemask k1."},{"name":"\u200b","value":"When a conversion is inexact, the value returned is rounded according to the rounding control bits in the MXCSR register. If a converted result cannot be represented in the destination format, the floating-point invalid exception is raised, and if this exception is masked, the indefinite integer value (2w-1, where w represents the number of bits in the destination format) is returned."},{"name":"\u200b","value":"Note: EVEX.vvvv is reserved and must be 1111b, otherwise instructions will #UD."},{"name":"C/C++ Intriniscs","value":"`VCVTTPD2QQ __m512i _mm512_cvttpd_epi64( __m512d a);\n`"},{"name":"\u200b","value":"`VCVTTPD2QQ __m512i _mm512_mask_cvttpd_epi64( __m512i s, __mmask8 k, __m512d a);\n`"},{"name":"\u200b","value":"`VCVTTPD2QQ __m512i _mm512_maskz_cvttpd_epi64( __mmask8 k, __m512d a);\n`"},{"name":"\u200b","value":"`VCVTTPD2QQ __m512i _mm512_cvtt_roundpd_epi64( __m512d a, int sae);\n`"},{"name":"\u200b","value":"`VCVTTPD2QQ __m512i _mm512_mask_cvtt_roundpd_epi64( __m512i s, __mmask8 k, __m512d a, int sae);\n`"},{"name":"\u200b","value":"`VCVTTPD2QQ __m512i _mm512_maskz_cvtt_roundpd_epi64( __mmask8 k, __m512d a, int sae);\n`"},{"name":"\u200b","value":"`VCVTTPD2QQ __m256i _mm256_mask_cvttpd_epi64( __m256i s, __mmask8 k, __m256d a);\n`"},{"name":"\u200b","value":"`VCVTTPD2QQ __m256i _mm256_maskz_cvttpd_epi64( __mmask8 k, __m256d a);\n`"},{"name":"\u200b","value":"`VCVTTPD2QQ __m128i _mm_mask_cvttpd_epi64( __m128i s, __mmask8 k, __m128d a);\n`"},{"name":"\u200b","value":"`VCVTTPD2QQ __m128i _mm_maskz_cvttpd_epi64( __mmask8 k, __m128d a);\n`"},{"name":"CPUID Flags","value":"AVX512VL AVX512DQ"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}