{"title":"XRSTORS — Restore Processor Extended States Supervisor","fields":[{"name":"Instruction Modes","value":"`XRSTORS mem`\n`XRSTORS64 mem`"},{"name":"Description","value":"Performs a full or partial restore of processor state components from the XSAVE area located at the memory address specified by the source operand. The implicit EDX:EAX register pair specifies a 64-bit instruction mask. The specific state components restored correspond to the bits set in the requested-feature bitmap (RFBM), which is the logical-AND of EDX:EAX and the logical-OR of XCR0 with the IA32_XSS MSR. XRSTORS may be executed only if CPL = 0."},{"name":"\u200b","value":"The format of the XSAVE area is detailed in Section 13.4, “XSAVE Area,” of Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1. Like FXRSTOR and FXSAVE, the memory format used for x87 state depends on a REX.W prefix; see Section 13.5.1, “x87 State” of Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1."},{"name":"\u200b","value":"Section 13.12, “Operation of XRSTORS,” of Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1 provides a detailed description of the operation of the XRSTOR instruction. The following items provide a high-level outline:"},{"name":"C/C++ Intriniscs","value":"`XRSTORS: void _xrstors( void * , unsigned __int64);\n`"},{"name":"\u200b","value":"`XRSTORS64: void _xrstors64( void * , unsigned __int64);\n`"},{"name":"CPUID Flags","value":"XSS"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}