{"title":"MOVSHDUP â€” Replicate Single FP Values","fields":[{"name":"Instruction Modes","value":"`MOVSHDUP xmm1, xmm2/m128`\n`VMOVSHDUP xmm1, xmm2/m128`\n`VMOVSHDUP ymm1, ymm2/m256`\n`VMOVSHDUP xmm1 {k1}{z}, xmm2/m128`\n`VMOVSHDUP ymm1 {k1}{z}, ymm2/m256`\n`VMOVSHDUP zmm1 {k1}{z}, zmm2/m512`"},{"name":"Description","value":"Duplicates odd-indexed single-precision floating-point values from the source operand (the second operand) to adjacent element pair in the destination operand (the first operand). See Figure 4-3. The source operand is an XMM, YMM or ZMM register or 128, 256 or 512-bit memory location and the destination operand is an XMM, YMM or ZMM register."},{"name":"\u200b","value":"128-bit Legacy SSE version: Bits (MAXVL-1:128) of the corresponding destination register remain unchanged."},{"name":"\u200b","value":"VEX.128 encoded version: Bits (MAXVL-1:128) of the destination register are zeroed."},{"name":"\u200b","value":"VEX.256 encoded version: Bits (MAXVL-1:256) of the destination register are zeroed."},{"name":"\u200b","value":"EVEX encoded version: The destination operand is updated at 32-bit granularity according to the writemask."},{"name":"\u200b","value":"Note: VEX.vvvv and EVEX.vvvv are reserved and must be 1111b otherwise instructions will #UD."},{"name":"C/C++ Intriniscs","value":"`VMOVSHDUP __m512 _mm512_movehdup_ps( __m512 a);\n`"},{"name":"\u200b","value":"`VMOVSHDUP __m512 _mm512_mask_movehdup_ps(__m512 s, __mmask16 k, __m512 a);\n`"},{"name":"\u200b","value":"`VMOVSHDUP __m512 _mm512_maskz_movehdup_ps( __mmask16 k, __m512 a);\n`"},{"name":"\u200b","value":"`VMOVSHDUP __m256 _mm256_mask_movehdup_ps(__m256 s, __mmask8 k, __m256 a);\n`"},{"name":"\u200b","value":"`VMOVSHDUP __m256 _mm256_maskz_movehdup_ps( __mmask8 k, __m256 a);\n`"},{"name":"\u200b","value":"`VMOVSHDUP __m128 _mm_mask_movehdup_ps(__m128 s, __mmask8 k, __m128 a);\n`"},{"name":"\u200b","value":"`VMOVSHDUP __m128 _mm_maskz_movehdup_ps( __mmask8 k, __m128 a);\n`"},{"name":"\u200b","value":"`VMOVSHDUP __m256 _mm256_movehdup_ps (__m256 a);\n`"},{"name":"\u200b","value":"`VMOVSHDUP __m128 _mm_movehdup_ps (__m128 a);\n`"},{"name":"CPUID Flags","value":"SSE3"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}