{"title":"PANDN â€” Logical AND NOT","fields":[{"name":"Instruction Modes","value":"`PANDN mm, mm/m64`\n`PANDN xmm1, xmm2/m128`\n`VPANDN xmm1, xmm2, xmm3/m128`\n`VPANDN ymm1, ymm2, ymm3/m256`\n`VPANDND xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst`\n`VPANDND ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst`\n`VPANDND zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst`\n`VPANDNQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst`\n`VPANDNQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst`\n`VPANDNQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst`"},{"name":"Description","value":"Performs a bitwise logical NOT operation on the first source operand, then performs bitwise AND with second source operand and stores the result in the destination operand. Each bit of the result is set to 1 if the corresponding bit in the first operand is 0 and the corresponding bit in the second operand is 1, otherwise it is set to 0."},{"name":"\u200b","value":"In 64-bit mode and not encoded with VEX/EVEX, using a REX prefix in the form of REX.R permits this instruction to access additional registers (XMM8-XMM15)."},{"name":"\u200b","value":"Legacy SSE instructions: The source operand can be an MMX technology register or a 64-bit memory location. The destination operand can be an MMX technology register."},{"name":"\u200b","value":"128-bit Legacy SSE version: The first source operand is an XMM register. The second operand can be an XMM register or an 128-bit memory location. The destination is not distinct from the first source XMM register and the upper bits (MAXVL-1:128) of the corresponding ZMM register destination are unmodified."},{"name":"\u200b","value":"EVEX encoded versions: The first source operand is a ZMM/YMM/XMM register. The second source operand can be a ZMM/YMM/XMM register, a 512/256/128-bit memory location or a 512/256/128-bit vector broadcasted from a 32/64-bit memory location. The destination operand is a ZMM/YMM/XMM register conditionally updated with writemask k1 at 32/64-bit granularity."},{"name":"\u200b","value":"VEX.256 encoded versions: The first source operand is a YMM register. The second source operand is a YMM register or a 256-bit memory location. The destination operand is a YMM register. The upper bits (MAXVL-1:256) of the corresponding ZMM register destination are zeroed."},{"name":"\u200b","value":"VEX.128 encoded versions: The first source operand is an XMM register. The second source operand is an XMM register or 128-bit memory location. The destination operand is an XMM register. The upper bits (MAXVL-1:128) of the corresponding ZMM register destination are zeroed."},{"name":"CPUID Flags","value":"MMX"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}