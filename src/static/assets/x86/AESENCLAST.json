{"title":"AESENCLAST â€” Perform Last Round of an AES Encryption Flow","fields":[{"name":"Instruction Modes","value":"`AESENCLAST xmm1, xmm2/m128`\n`VAESENCLAST xmm1, xmm2, xmm3/m128`"},{"name":"Description","value":"This instruction performs the last round of an AES encryption flow using a round key from the second source operand, operating on 128-bit data (state) from the first source operand, and store the result in the destination operand."},{"name":"\u200b","value":"128-bit Legacy SSE version: The first source operand and the destination operand are the same and must be an XMM register. The second source operand can be an XMM register or a 128-bit memory location. Bits (MAXVL-1:128) of the corresponding YMM destination register remain unchanged."},{"name":"\u200b","value":"VEX.128 encoded version: The first source operand and the destination operand are XMM registers. The second source operand can be an XMM register or a 128-bit memory location. Bits (MAXVL-1:128) of the destination YMM register are zeroed."},{"name":"C/C++ Intrinsics","value":"`(V)AESENCLAST: __m128i _mm_aesenclast (__m128i, __m128i)\n`"},{"name":"CPUID Flags","value":"AES"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}