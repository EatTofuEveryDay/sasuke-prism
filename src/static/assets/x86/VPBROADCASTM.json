{"title":"VPBROADCASTM â€” Broadcast Mask to Vector Register","fields":[{"name":"Instruction Modes","value":"`VPBROADCASTMB2Q xmm1, k1`\n`VPBROADCASTMB2Q ymm1, k1`\n`VPBROADCASTMB2Q zmm1, k1`\n`VPBROADCASTMW2D xmm1, k1`\n`VPBROADCASTMW2D ymm1, k1`\n`VPBROADCASTMW2D zmm1, k1`"},{"name":"Description","value":"Broadcasts the zero-extended 64/32 bit value of the low byte/word of the source operand (the second operand) to each 64/32 bit element of the destination operand (the first operand). The source operand is an opmask register. The destination operand is a ZMM register (EVEX.512), YMM register (EVEX.256), or XMM register (EVEX.128)."},{"name":"\u200b","value":"EVEX.vvvv is reserved and must be 1111b otherwise instructions will #UD."},{"name":"C/C++ Intrinsics","value":"`VPBROADCASTMB2Q __m512i _mm512_broadcastmb_epi64( __mmask8);\n`"},{"name":"\u200b","value":"`VPBROADCASTMW2D __m512i _mm512_broadcastmw_epi32( __mmask16);\n`"},{"name":"\u200b","value":"`VPBROADCASTMB2Q __m256i _mm256_broadcastmb_epi64( __mmask8);\n`"},{"name":"\u200b","value":"`VPBROADCASTMW2D __m256i _mm256_broadcastmw_epi32( __mmask8);\n`"},{"name":"\u200b","value":"`VPBROADCASTMB2Q __m128i _mm_broadcastmb_epi64( __mmask8);\n`"},{"name":"\u200b","value":"`VPBROADCASTMW2D __m128i _mm_broadcastmw_epi32( __mmask8);\n`"},{"name":"CPUID Flags","value":"AVX512VL AVX512CD"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}