{"title":"MOVMSKPD â€” Extract Packed Double-Precision Floating-Point Sign Mask","fields":[{"name":"Instruction Modes","value":"`MOVMSKPD reg, xmm`\n`VMOVMSKPD reg, xmm2`\n`VMOVMSKPD reg, ymm2`"},{"name":"Description","value":"Extracts the sign bits from the packed double-precision floating-point values in the source operand (second operand), formats them into a 2-bit mask, and stores the mask in the destination operand (first operand). The source operand is an XMM register, and the destination operand is a general-purpose register. The mask is stored in the 2 low-order bits of the destination operand. Zero-extend the upper bits of the destination."},{"name":"\u200b","value":"In 64-bit mode, the instruction can access additional registers (XMM8-XMM15, R8-R15) when used with a REX.R prefix. The default operand size is 64-bit in 64-bit mode."},{"name":"\u200b","value":"128-bit versions: The source operand is a YMM register. The destination operand is a general purpose register."},{"name":"\u200b","value":"VEX.256 encoded version: The source operand is a YMM register. The destination operand is a general purpose register."},{"name":"\u200b","value":"Note: In VEX-encoded versions, VEX.vvvv is reserved and must be 1111b, otherwise instructions will #UD."},{"name":"C/C++ Intriniscs","value":"`MOVMSKPD: int _mm_movemask_pd ( __m128d a)\n`"},{"name":"\u200b","value":"`VMOVMSKPD: _mm256_movemask_pd(__m256d a)\n`"},{"name":"CPUID Flags","value":"SSE2"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}