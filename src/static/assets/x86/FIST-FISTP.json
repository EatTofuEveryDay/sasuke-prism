{"title":"FIST/FISTP â€” Store Integer","fields":[{"name":"Instruction Modes","value":"`FIST m16int`\n`FIST m32int`\n`FISTP m16int`\n`FISTP m32int`\n`FISTP m64int`"},{"name":"Description","value":"The FIST instruction converts the value in the ST(0) register to a signed integer and stores the result in the destination operand. Values can be stored in word or doubleword integer format. The destination operand specifies the address where the first byte of the destination value is to be stored."},{"name":"\u200b","value":"The FISTP instruction performs the same operation as the FIST instruction and then pops the register stack. To pop the register stack, the processor marks the ST(0) register as empty and increments the stack pointer (TOP) by 1. The FISTP instruction also stores values in quadword integer format."},{"name":"\u200b","value":"The following table shows the results obtained when storing various classes of numbers in integer format."}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}