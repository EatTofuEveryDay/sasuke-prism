{"title":"AESDEC â€” Perform One Round of an AES Decryption Flow","fields":[{"name":"Instruction Modes","value":"`AESDEC xmm1, xmm2/m128`\n`VAESDEC xmm1, xmm2, xmm3/m128`"},{"name":"Description","value":"This instruction performs a single round of the AES decryption flow using the Equivalent Inverse Cipher, with the round key from the second source operand, operating on a 128-bit data (state) from the first source operand, and store the result in the destination operand."},{"name":"\u200b","value":"Use the AESDEC instruction for all but the last decryption round. For the last decryption round, use the AESDECLAST instruction."},{"name":"\u200b","value":"128-bit Legacy SSE version: The first source operand and the destination operand are the same and must be an XMM register. The second source operand can be an XMM register or a 128-bit memory location. Bits (MAXVL-1:128) of the corresponding YMM destination register remain unchanged."},{"name":"\u200b","value":"VEX.128 encoded version: The first source operand and the destination operand are XMM registers. The second source operand can be an XMM register or a 128-bit memory location. Bits (MAXVL-1:128) of the destination YMM register are zeroed."},{"name":"C/C++ Intrinsics","value":"`(V)AESDEC: __m128i _mm_aesdec (__m128i, __m128i)\n`"},{"name":"CPUID Flags","value":"AES"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}