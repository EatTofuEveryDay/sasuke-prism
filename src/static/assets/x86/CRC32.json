{"title":"CRC32 â€” Accumulate CRC32 Value","fields":[{"name":"Instruction Modes","value":"`CRC32 r32, r/m8`\n`CRC32 r32, r/m8*`\n`CRC32 r32, r/m16`\n`CRC32 r32, r/m32`\n`CRC32 r64, r/m8`\n`CRC32 r64, r/m64`"},{"name":"Description","value":"Starting with an initial value in the first operand (destination operand), accumulates a CRC32 (polynomial 11EDC6F41H) value for the second operand (source operand) and stores the result in the destination operand. The source operand can be a register or a memory location. The destination operand must be an r32 or r64 register. If the destination is an r64 register, then the 32-bit result is stored in the least significant double word and 00000000H is stored in the most significant double word of the r64 register."},{"name":"\u200b","value":"The initial value supplied in the destination operand is a double word integer stored in the r32 register or the least significant double word of the r64 register. To incrementally accumulate a CRC32 value, software retains the result of the previous CRC32 operation in the destination operand, then executes the CRC32 instruction again with new input data in the source operand. Data contained in the source operand is processed in reflected bit order. This means that the most significant bit of the source operand is treated as the least significant bit of the quotient, and so on, for all the bits of the source operand. Likewise, the result of the CRC operation is stored in the destination operand in reflected bit order. This means that the most significant bit of the resulting CRC (bit 31) is stored in the least significant bit of the destination operand (bit 0), and so on, for all the bits of the CRC."},{"name":"C/C++ Intrinsics","value":"`unsigned int _mm_crc32_u8( unsigned int crc, unsigned char data )\n`"},{"name":"\u200b","value":"`unsigned int _mm_crc32_u16( unsigned int crc, unsigned short data )\n`"},{"name":"\u200b","value":"`unsigned int _mm_crc32_u32( unsigned int crc, unsigned int data )\n`"},{"name":"\u200b","value":"`unsinged __int64 _mm_crc32_u64( unsinged __int64 crc, unsigned __int64 data )\n`"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}