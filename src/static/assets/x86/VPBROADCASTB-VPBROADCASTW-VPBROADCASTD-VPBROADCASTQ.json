{"title":"VPBROADCASTB/VPBROADCASTW/VPBROADCASTD/VPBROADCASTQ â€” Load with Broadcast Integer Data from General Purpose Register","fields":[{"name":"Instruction Modes","value":"`VPBROADCASTB xmm1 {k1}{z}, reg`\n`VPBROADCASTB ymm1 {k1}{z}, reg`\n`VPBROADCASTB zmm1 {k1}{z}, reg`\n`VPBROADCASTW xmm1 {k1}{z}, reg`\n`VPBROADCASTW ymm1 {k1}{z}, reg`\n`VPBROADCASTW zmm1 {k1}{z}, reg`\n`VPBROADCASTD xmm1 {k1}{z}, r32`\n`VPBROADCASTD ymm1 {k1}{z}, r32`\n`VPBROADCASTD zmm1 {k1}{z}, r32`\n`VPBROADCASTQ xmm1 {k1}{z}, r64`\n`VPBROADCASTQ ymm1 {k1}{z}, r64`\n`VPBROADCASTQ zmm1 {k1}{z}, r64`"},{"name":"Description","value":"Broadcasts a 8-bit, 16-bit, 32-bit or 64-bit value from a general-purpose register (the second operand) to all the locations in the destination vector register (the first operand) using the writemask k1."},{"name":"\u200b","value":"EVEX.vvvv is reserved and must be 1111b otherwise instructions will #UD."},{"name":"C/C++ Intriniscs","value":"`VPBROADCASTB __m512i _mm512_mask_set1_epi8(__m512i s, __mmask64 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTB __m512i _mm512_maskz_set1_epi8( __mmask64 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTB __m256i _mm256_mask_set1_epi8(__m256i s, __mmask32 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTB __m256i _mm256_maskz_set1_epi8( __mmask32 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTB __m128i _mm_mask_set1_epi8(__m128i s, __mmask16 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTB __m128i _mm_maskz_set1_epi8( __mmask16 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTD __m512i _mm512_mask_set1_epi32(__m512i s, __mmask16 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTD __m512i _mm512_maskz_set1_epi32( __mmask16 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTD __m256i _mm256_mask_set1_epi32(__m256i s, __mmask8 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTD __m256i _mm256_maskz_set1_epi32( __mmask8 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTD __m128i _mm_mask_set1_epi32(__m128i s, __mmask8 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTD __m128i _mm_maskz_set1_epi32( __mmask8 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTQ __m512i _mm512_mask_set1_epi64(__m512i s, __mmask8 k, __int64 a);\n`"},{"name":"\u200b","value":"`VPBROADCASTQ __m512i _mm512_maskz_set1_epi64( __mmask8 k, __int64 a);\n`"},{"name":"\u200b","value":"`VPBROADCASTQ __m256i _mm256_mask_set1_epi64(__m256i s, __mmask8 k, __int64 a);\n`"},{"name":"\u200b","value":"`VPBROADCASTQ __m256i _mm256_maskz_set1_epi64( __mmask8 k, __int64 a);\n`"},{"name":"\u200b","value":"`VPBROADCASTQ __m128i _mm_mask_set1_epi64(__m128i s, __mmask8 k, __int64 a);\n`"},{"name":"\u200b","value":"`VPBROADCASTQ __m128i _mm_maskz_set1_epi64( __mmask8 k, __int64 a);\n`"},{"name":"\u200b","value":"`VPBROADCASTW __m512i _mm512_mask_set1_epi16(__m512i s, __mmask32 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTW __m512i _mm512_maskz_set1_epi16( __mmask32 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTW __m256i _mm256_mask_set1_epi16(__m256i s, __mmask16 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTW __m256i _mm256_maskz_set1_epi16( __mmask16 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTW __m128i _mm_mask_set1_epi16(__m128i s, __mmask8 k, int a);\n`"},{"name":"\u200b","value":"`VPBROADCASTW __m128i _mm_maskz_set1_epi16( __mmask8 k, int a);\n`"},{"name":"CPUID Flags","value":"AVX512VL AVX512BW"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}