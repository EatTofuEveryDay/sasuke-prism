{"title":"RORX â€” Rotate Right Logical Without Affecting Flags","fields":[{"name":"Instruction Modes","value":"`ib RORX r32, r/m32, imm8`\n`ib RORX r64, r/m64, imm8`"},{"name":"Description","value":"Rotates the bits of second operand right by the count value specified in imm8 without affecting arithmetic flags. The RORX instruction does not read or write the arithmetic flags."},{"name":"\u200b","value":"This instruction is not supported in real mode and virtual-8086 mode. The operand size is always 32 bits if not in 64-bit mode. In 64-bit mode operand size 64 requires VEX.W1. VEX.W1 is ignored in non-64-bit modes. An attempt to execute this instruction with VEX.L not equal to 0 will cause #UD."},{"name":"C/C++ Intrinsics","value":"`Auto-generated from high-level language.\n`"},{"name":"CPUID Flags","value":"BMI2"}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}