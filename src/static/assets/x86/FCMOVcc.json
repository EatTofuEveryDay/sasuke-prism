{"title":"FCMOVcc — Floating-Point Conditional Move","fields":[{"name":"Instruction Modes","value":"`FCMOVB ST(0), ST(i)`\n`FCMOVE ST(0), ST(i)`\n`FCMOVBE ST(0), ST(i)`\n`FCMOVU ST(0), ST(i)`\n`FCMOVNB ST(0), ST(i)`\n`FCMOVNE ST(0), ST(i)`\n`FCMOVNBE ST(0), ST(i)`\n`FCMOVNU ST(0), ST(i)`"},{"name":"Description","value":"Tests the status flags in the EFLAGS register and moves the source operand (second operand) to the destination operand (first operand) if the given test condition is true. The condition for each mnemonic os given in the Description column above and in Chapter 8 in the Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1. The source operand is always in the ST(i) register and the destination operand is always ST(0)."},{"name":"\u200b","value":"The FCMOVcc instructions are useful for optimizing small IF constructions. They also help eliminate branching overhead for IF operations and the possibility of branch mispredictions by the processor."},{"name":"\u200b","value":"A processor may not support the FCMOVcc instructions. Software can check if the FCMOVcc instructions are supported by checking the processor’s feature information with the CPUID instruction (see “COMISS—Compare Scalar Ordered Single-Precision Floating-Point Values and Set EFLAGS” in this chapter). If both the CMOV and FPU feature bits are set, the FCMOVcc instructions are supported."},{"name":"\u200b","value":"This instruction’s operation is the same in non-64-bit modes and 64-bit mode."}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}