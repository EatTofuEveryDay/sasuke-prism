{"title":"DEC — Decrement by 1","fields":[{"name":"Instruction Modes","value":"`DEC r/m8`\n`DEC r/m8*`\n`DEC r/m16`\n`DEC r/m32`\n`DEC r/m64`\n`DEC r16`\n`DEC r32`"},{"name":"Description","value":"Subtracts 1 from the destination operand, while preserving the state of the CF flag. The destination operand can be a register or a memory location. This instruction allows a loop counter to be updated without disturbing the CF flag. (To perform a decrement operation that updates the CF flag, use a SUB instruction with an immediate operand of 1.)"},{"name":"\u200b","value":"This instruction can be used with a LOCK prefix to allow the instruction to be executed atomically."},{"name":"\u200b","value":"In 64-bit mode, DEC r16 and DEC r32 are not encodable (because opcodes 48H through 4FH are REX prefixes). Otherwise, the instruction’s 64-bit mode default operation size is 32 bits. Use of the REX.R prefix permits access to additional registers (R8-R15). Use of the REX.W prefix promotes operation to 64 bits."},{"name":"\u200b","value":"See the summary chart at the beginning of this section for encoding data and limits."}],"color":65535,"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}