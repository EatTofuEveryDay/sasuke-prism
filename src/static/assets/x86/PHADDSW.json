{"title":"PHADDSW â€” Packed Horizontal Add and Saturate","fields":[{"name":"Instruction Modes","value":"`PHADDSW mm1, mm2/m64`\n`PHADDSW xmm1, xmm2/m128`\n`VPHADDSW xmm1, xmm2, xmm3/m128`\n`VPHADDSW ymm1, ymm2, ymm3/m256`"},{"name":"Description","value":"(V)PHADDSW adds two adjacent signed 16-bit integers horizontally from the source and destination operands and saturates the signed results; packs the signed, saturated 16-bit results to the destination operand (first operand) When the source operand is a 128-bit memory operand, the operand must be aligned on a 16-byte boundary or a general-protection exception (#GP) will be generated."},{"name":"\u200b","value":"Legacy SSE version: Both operands can be MMX registers. The second source operand can be an MMX register or a 64-bit memory location."},{"name":"\u200b","value":"128-bit Legacy SSE version: The first source and destination operands are XMM registers. The second source operand is an XMM register or a 128-bit memory location. Bits (MAXVL-1:128) of the corresponding YMM destination register remain unchanged."},{"name":"\u200b","value":"In 64-bit mode, use the REX prefix to access additional registers."},{"name":"\u200b","value":"VEX.128 encoded version: The first source and destination operands are XMM registers. The second source operand is an XMM register or a 128-bit memory location. Bits (MAXVL-1:128) of the destination YMM register are zeroed."},{"name":"\u200b","value":"VEX.256 encoded version: The first source and destination operands are YMM registers. The second source operand can be an YMM register or a 256-bit memory location."},{"name":"\u200b","value":"Note: VEX.L must be 0, otherwise the instruction will #UD."},{"name":"C/C++ Intriniscs","value":"`PHADDSW: __m64 _mm_hadds_pi16 (__m64 a, __m64 b)\n`"},{"name":"\u200b","value":"`(V)PHADDSW: __m128i _mm_hadds_epi16 (__m128i a, __m128i b)\n`"},{"name":"\u200b","value":"`VPHADDSW: __m256i _mm256_hadds_epi16 (__m256i a, __m256i b)\n`"},{"name":"CPUID Flags","value":"SSSE3"}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}