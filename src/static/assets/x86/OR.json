{"title":"OR — Logical Inclusive OR","fields":[{"name":"Instruction Modes","value":"`OR AL, imm8`\n`OR AX, imm16`\n`OR EAX, imm32`\n`OR RAX, imm32`\n`OR r/m8, imm8`\n`OR r/m8*, imm8`\n`OR r/m16, imm16`\n`OR r/m32, imm32`\n`OR r/m64, imm32`\n`OR r/m16, imm8`\n`OR r/m32, imm8`\n`OR r/m64, imm8`\n`OR r/m8, r8`\n`OR r/m8*, r8*`\n`OR r/m16, r16`\n`OR r/m32, r32`\n`OR r/m64, r64`\n`OR r8, r/m8`\n`OR r8*, r/m8*`\n`OR r16, r/m16`\n`OR r32, r/m32`\n`OR r64, r/m64`"},{"name":"Description","value":"Performs a bitwise inclusive OR operation between the destination (first) and source (second) operands and stores the result in the destination operand location. The source operand can be an immediate, a register, or a memory location; the destination operand can be a register or a memory location. (However, two memory operands cannot be used in one instruction.) Each bit of the result of the OR instruction is set to 0 if both corresponding bits of the first and second operands are 0; otherwise, each bit is set to 1."},{"name":"\u200b","value":"This instruction can be used with a LOCK prefix to allow the instruction to be executed atomically."},{"name":"\u200b","value":"In 64-bit mode, the instruction’s default operation size is 32 bits. Using a REX prefix in the form of REX.R permits access to additional registers (R8-R15). Using a REX prefix in the form of REX.W promotes operation to 64 bits. See the summary chart at the beginning of this section for encoding data and limits."}],"footer":{"text":"Thanks to Felix Cloutier for the online x86 reference"}}